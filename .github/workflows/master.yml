# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # install mysql? use mysql?
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test
          DB_USER: root
          DB_NAME: ${{ secrets.DB_NAME }}
        ports:
            - 3306
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10
    environment: Test
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.17.0
      # Shutdown the Default MySQL, "sudo" is necessary, please do not remove it
      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop 
      - name: Start mysql??
        run: sudo service mysql start
      - name: install all packages with version from project's own package-lock.json
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
      # Runs a set of commands using the runners shell
      - name: Run automated tests
        run: echo Running automated tests; npm run test:ci;
        env:
          ENV_TXT: ${{ secrets.ENV_TXT }}
      # Upload code coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
